generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  BASIC
  INTERMEDIATE
  ADVANCED
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  name          String?
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  refreshTokens RefreshToken[]
  workflows     Workflow[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Workflow {
  id          String          @id @default(uuid())
  title       String
  description String?
  difficulty  Difficulty
  createdById String
  createdBy   User            @relation(fields: [createdById], references: [id], onDelete: Cascade)
  steps       WorkflowStep[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model WorkflowStep {
  id          String   @id @default(uuid())
  title       String
  description String?
  order       Int
  workflowId  String
  workflow    Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)

  @@unique([workflowId, order])
}
